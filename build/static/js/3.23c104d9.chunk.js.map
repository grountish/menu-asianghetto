{"version":3,"sources":["Assets/Tacc.svg","Assets/Apio.svg","Assets/Altramuces.svg","Assets/Cacahuetes.svg","Assets/Crustaceos.svg","Assets/Huevo.svg","Assets/Lactosa.svg","Assets/Moluscos.svg","Assets/Mostaza.svg","Assets/Nueces.svg","Assets/Pescado.svg","Assets/Sesamo.svg","Assets/SO2.svg","Assets/Soja.svg","Assets/ic vegetarianos.svg","Assets/ics veganos.svg","Assets/home.svg","Context/Context.jsx","Components/Division.js","Components/FoodCategory.js","Components/CategoryAloneList.js","Components/DivisionList.js","Components/Foodbox.js","Components/Foodlist.js","Components/DividedFoodList.js","Components/Searchbar.js","Components/AlergenosData.jsx","Components/Alergeno.jsx","Components/Alergenos.jsx","Components/AlergenosPopUp.jsx","Components/SearchComponent.js","Components/Upselling.jsx","Clients/places.js"],"names":["module","exports","DataContext","createContext","Division","props","useContext","foundPlace","lang","className","style","height","categorias","length","alignItems","display","fontSize","margin","color","fontFamily","nombre","nombre_en","nombre_es","nameFood","FoodCategory","comentario","flexDirection","CategoryAloneList","CategoriesAloneList","filter","x","categoryAlone","map","category","index","key","to","place","DivisionList","divisions","divisiones","division","FoodBox","precio","flattened","switchLang","parameter","product","find","el","parameterEs","parameterEn","FoodList","match","categoryFoods","params","categoryName","foundCategory","data","oneFood","Foodbox","DividedFoodList","divisionFoods","divisionName","selectedCategories","SearchBar","inputValue","filterOnChange","useState","focus","setFocus","onClick","onBlur","autoFocus","type","value","onChange","placeholder","background","backgroundColor","zIndex","borderBottom","AlergenosData","number","name","name_eng","name_es","source","Gluten","Altramuces","Cacahuetes","Nueces","Huevo","Lactosa","Moluscos","Mostaza","Crustaceos","Pescado","Sesamo","Sulfitos","Soja","Apio","Alergeno","checked","setChecked","isChecked","listHandler","htmlFor","src","alt","nameAlergeno","Alergenos","allergyList","setAllergyList","arrayOfMenu","push","flat","iterablesAlerg","undefined","alergenos","elements","indexOf","newL","Set","elemsToPush","alergeno","AlergenosPopUp","modalPopUpClass","setmodalPopUpClass","isOpenPopUp","overlayColor","modalBackgroundColor","titlePopUp","subtitlePopUp","border","borderButton","setTimeout","showAllergenPopUp","SearchComponent","setInputValue","filterFoods","setFilterFoods","setIsOpenPopUp","displayAllergList","setdisplayAllergList","filterByTag","tag","filteredFoods","food","tags","toLowerCase","includes","translations","vegetarian","vegan","celiacs","Searchbar","e","target","searchValue","descripcion","veganos","vegetarianos","celiacos","i","Upselling","isOpen","showModal","modalClass","setmodalClass","sugerenciaDelDiaImg","param","window","location","pathname","slice","foods","places","option1","Places","buscar","setBuscar","setLang","setIsOpen","showBack","setShowBack","Provider","Helmet","font","minHeight","homeInverted","home","hasUpselling","nombreEs","nombreEn","hasLang","iso","exact","path","render","Foodlist"],"mappings":"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","file":"static/js/3.23c104d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tacc.9218134a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Apio.5dbc3a6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Altramuces.10a8ddc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cacahuetes.1aefb693.svg\";","module.exports = __webpack_public_path__ + \"static/media/Crustaceos.8aa5389d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Huevo.613a2750.svg\";","module.exports = __webpack_public_path__ + \"static/media/Lactosa.5dce37b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Moluscos.34ef5201.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mostaza.699b3c31.svg\";","module.exports = __webpack_public_path__ + \"static/media/Nueces.99d19ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pescado.1911a126.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sesamo.ec20a82e.svg\";","module.exports = __webpack_public_path__ + \"static/media/SO2.beb88773.svg\";","module.exports = __webpack_public_path__ + \"static/media/Soja.e97e5bf4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic vegetarianos.12e263b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ics veganos.08d31569.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.331d8f96.svg\";","import { createContext } from 'react';\n\nexport const DataContext = createContext(null);\n","import React, { useContext} from \"react\";\nimport { DataContext } from '../Context/Context'\n\nconst Division = (props) => {\n\n  const {foundPlace, lang} = useContext(DataContext)\n    const nameFood = () => {\n      switch (lang) {\n        case \"ca\":\n          return props.nombre;\n        case \"en\":\n          return props.nombre_en;\n        case \"es\":\n          return props.nombre_es;\n        default: return props.nombre;\n    }\n  }\n    return (\n      <div\n        className=\"box\"\n        style={{\n          height: `calc(110vh/${foundPlace.categorias.length})`,\n          alignItems: \"center\",\n          display: \"flex\"\n         \n        }}\n      >\n        <h1\n          className=\"headerCategory nice-border\"\n          style={{\n            fontSize: `calc(112vh/${foundPlace.categorias.length}/2.5)`,\n            margin: \"auto\",\n            color: foundPlace.color,\n            fontFamily: \"Brandon Bold\"\n          }}>\n          {nameFood()}\n        </h1>\n      </div>\n    );\n  }\n\n\nexport default Division;","import React, { useContext } from \"react\";\nimport { DataContext } from './../Context/Context'\n\n\nconst FoodCategory = ({ lang, nombre, nombre_en, nombre_es, comentario }) => {\n\n  const {foundPlace} = useContext(DataContext)\n    const nameFood = () => {\n      switch (lang) {\n        case \"ca\":\n          return nombre;\n        case \"en\":\n          return nombre_en;\n        case \"es\":\n          return nombre_es;\n        default: return nombre;\n    }\n  }\n    return (\n      <div\n        className=\"box \"\n        style={{\n          height: `calc(100vh/${foundPlace.categorias.length})`,\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection:\"column\"\n        }}\n      >\n        <h1\n          className=\"headerCategory nice-border \"\n          style={{\n            fontSize: `calc(92vh/${foundPlace.categorias.length}/2.5)`,\n            margin: \"auto\",\n            color: foundPlace.color,\n            fontFamily: \"Brandon Bold\"\n          }}>\n          {nameFood()}\n        </h1>\n      \n      </div>\n    );\n  }\n\n\nexport default FoodCategory;","import React, { useContext } from \"react\";\nimport FoodCategory from \"./FoodCategory\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from '../Context/Context'\n\nconst CategoryAloneList = ({ lang }) => {\n  const {foundPlace} = useContext(DataContext)\n  const CategoriesAloneList = foundPlace.categorias.filter(x=>x.categoryAlone === true)\n\n    return (\n      <div className=\"centered fadeIn\">\n        <ul className=\"list-food\">\n          {CategoriesAloneList.map((category, index) => {\n            return (\n              <Link\n                style={{ color: foundPlace.color }}\n                key={index}\n                to={`${foundPlace.place}/category/${category.nombre}`}\n              >\n                <FoodCategory {...category} lang={lang} />\n              </Link>\n            );\n          })}\n        </ul>\n      </div>\n    );\n}\n\nexport default CategoryAloneList;","import React, { useContext } from \"react\";\nimport { DataContext } from \"../Context/Context\";\nimport Division from \"./Division\";\nimport { Link } from \"react-router-dom\";\nimport CategoryAloneList from './CategoryAloneList'\nconst DivisionList = () => {\n  const { foundPlace, lang } = useContext(DataContext);\n\n  const divisions = foundPlace.divisiones;\n  return (\n    <div className=\"centered fadeIn\" >\n      <div className=\"list-add division-list\">\n        <ul className=\"list-food\">\n        <CategoryAloneList />\n          {divisions.map((division, index) => {\n            return (\n              <Link\n                style={{ color: foundPlace.color }}\n                key={index}\n                to={`${foundPlace.place}/division/${division.nombre_es}`}\n              >\n                <Division {...division} lang={lang} />\n              </Link>\n            );\n          })}\n        </ul>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default DivisionList;\n\n","import React, { useContext } from 'react';\nimport { DataContext } from './../Context/Context'\n\nconst FoodBox = ({lang, nombre, precio}) => {\n\n  const { foundPlace, flattened } = useContext(DataContext);\n\n  const switchLang = (parameter) => {\n    let product = flattened.find(el => el.nombre === nombre)\n    let parameterEs = `${parameter}_es`;\n    let parameterEn = `${parameter}_en`;\n    switch (lang) {\n      case \"ca\":\n        return product[parameter];\n      case \"en\":\n        return product[parameterEn];\n      case \"es\":\n        return product[parameterEs];\n      default:\n        return product[parameter]\n    }\n  };\n\n    return (\n      <div className=\"food-box\" >\n        <div className=\"left-box\">\n          <h4 style={{color: foundPlace.color , fontFamily: \"Brandon Regular\"}}>{switchLang('nombre')}</h4>\n          <p>{switchLang('descripcion')}</p>\n        </div>\n      <h3 className=\"h4-precio\">${precio}</h3>\n      </div>\n    );\n  }\n\nexport default FoodBox;\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./../Context/Context\";\nimport Foodbox from \"./Foodbox\";\nimport \"./../App.css\";\n\nconst FoodList = ({ lang, match }) => {\n  const { foundPlace } = useContext(DataContext);\n\n  const categoryFoods = match.params.categoryName;\n  const foundCategory = foundPlace.categorias.find(\n    (category) => categoryFoods === category.nombre\n  );\n\n  \n  return (\n    <div className=\"centered fadeIn\">\n      <div className=\"list-add\">\n        <ul className=\"list-food\">\n        <h1 className=\"category-name\">{categoryFoods}</h1>\n        <p className=\"category-comentario\">{foundCategory.comentario}</p>\n\n          {foundCategory.data.map((oneFood, index) => {\n            return <Foodbox {...oneFood} key={index} lang={lang} />;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default FoodList;\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"../Context/Context\";\nimport { Link } from \"react-router-dom\";\nimport FoodCategory from \"./FoodCategory\";\nimport \"./../App.css\";\n\nconst DividedFoodList = ({ lang, match }) => {\n  const { foundPlace } = useContext(DataContext);\n  const divisionFoods = match.params.divisionName;\n  const selectedCategories = foundPlace.categorias.filter(\n    (x) => x.division === divisionFoods\n  );\n  return (\n    <div className=\"centered fadeIn\">\n      <div className=\"list-add\">\n        <ul className=\"list-food\">\n          {selectedCategories.map((category, index) => {\n            return (\n              <Link\n                style={{ color: foundPlace.color }}\n                key={index}\n                to={`${divisionFoods}/category/${category.nombre}`}\n              >\n                <FoodCategory {...category} lang={lang} />\n              </Link>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default DividedFoodList;\n","import React, { useContext, useState } from \"react\";\nimport { DataContext } from \"./../Context/Context\";\n\n\nconst SearchBar = ({inputValue, filterOnChange}) => {\n  const { foundPlace } = useContext(DataContext);\n  const [focus, setFocus] = useState('-1')\n    return (\n      <div onClick={()=>setFocus('1')} onBlur={()=>setFocus('-1')}>\n        <input\n          className=\"input\"\n          autoFocus={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={filterOnChange}\n          placeholder=\"Buscar...\"\n          style={{\n            background: foundPlace.backgroundColor,\n            color: foundPlace.color,\n            zIndex: focus,\n            borderBottom: `1px solid ${foundPlace.color}`\n          }}\n        />\n      </div>\n    );\n  }\n  \nexport default SearchBar;","import Apio from \"./../Assets/Apio.svg\";\nimport Altramuces from \"./../Assets/Altramuces.svg\";\nimport Cacahuetes from \"./../Assets/Cacahuetes.svg\";\nimport Crustaceos from \"./../Assets/Crustaceos.svg\";\nimport Huevo from \"./../Assets/Huevo.svg\";\nimport Lactosa from \"./../Assets/Lactosa.svg\";\nimport Moluscos from \"./../Assets/Moluscos.svg\";\nimport Mostaza from \"./../Assets/Mostaza.svg\";\nimport Nueces from \"./../Assets/Nueces.svg\";\nimport Pescado from \"./../Assets/Pescado.svg\";\nimport Sesamo from \"./../Assets/Sesamo.svg\";\nimport Sulfitos from \"./../Assets/SO2.svg\";\nimport Soja from \"./../Assets/Soja.svg\";\nimport Gluten from \"./../Assets/Tacc.svg\";\n\nconst AlergenosData = [\n  {\n    number: 1,\n    name: \"Gluten\",\n    name_eng:'Gluten',\n    name_es:'Gluten',\n    source: Gluten,\n  },\n  {\n    number: 2,\n    name: \"Tramussos\",\n    name_eng:'Lupins',\n    name_es:'Altramuces',\n    source: Altramuces,\n  },\n  {\n    number: 3,\n    name: \"Cacauets\",\n    name_eng:'Peanuts',\n    name_es:'Cacahuetes',\n    source: Cacahuetes,\n  },\n  {\n    number: 4,\n    name: \"Nous\",\n    name_eng:'Nuts',\n    name_es:'Nueces',\n    source: Nueces,\n  },\n  {\n    number: 5,\n    name: \"Ou\",\n    name_eng:'Eggs',\n    name_es:'Huevo',\n    source: Huevo,\n  },\n  {\n    number: 6,\n    name: \"Lactosa\",\n    name_eng:'Lactose',\n    name_es:'Lactosa',\n    source: Lactosa,\n  },\n  {\n    number: 7,\n    name: \"Mol-luscs\",\n    name_eng:'Mollusc',\n    name_es:'Moluscos',\n    source: Moluscos,\n  },\n  {\n    number: 8,\n    name: \"Mostassa\",\n    name_eng:'Mostard',\n    name_es:'Mostaza',\n    source: Mostaza,\n  },\n  {\n    number: 9,\n    name: \"Crustacis\",\n    name_eng:'Crustaceans',\n    name_es:'Crustáceos',\n    source: Crustaceos,\n  },\n  {\n    number: 10,\n    name: \"Peix\",\n    name_eng:'Fish',\n    name_es:'Pescado',\n    source: Pescado,\n  },\n  {\n    number: 11,\n    name: \"Sesamo\",\n    name_eng:'Sesame',\n    name_es:'Sésamo',\n    source: Sesamo,\n  },\n  {\n    number: 12,\n    name: \"Sulfits\",\n    name_eng:'Sulphits',\n    name_es:'Sulfitos',\n    source: Sulfitos,\n  },\n  {\n    number: 13,\n    name: \"Soja\",\n    name_eng:'Soy',\n    name_es:'Soja',\n    source: Soja,\n  },\n  {\n    number: 14,\n    name: \"Api\",\n    name_eng:'Celery',\n    name_es:'Apio',\n    source: Apio,\n  },\n];\n\nexport default AlergenosData;\n","import React, { useState } from \"react\";\n\nconst Alergeno = (props) => {\nconst [checked, setChecked] = useState(false)\n\n  const clickHandler = (isChecked, number) => {\n      setChecked(!checked)\n      props.listHandler(isChecked, number)\n  }\n  \n  const nameAlergeno = () => {\n    switch (props.lang) {\n      case \"ca\":\n        return props.name;\n      case \"en\":\n        return props.name_eng;\n      case \"es\":\n        return props.name_es;\n      default: return props.name;\n    }\n  };\n\n\n  return (\n    <label className={checked?\"iconBoxContainerChecked\":\"iconBoxContainer\"} onClick={() => clickHandler(checked, props.number)} htmlFor={props.number}>\n      <img className=\"allergenIcons\" src={props.source} alt={props.name} />\n      <p>{nameAlergeno ()}</p>\n    </label>\n  );\n};\n\nexport default Alergeno;\n","import React, { useContext } from \"react\";\nimport { DataContext } from \"./../Context/Context\";\nimport AlergenosData from \"./AlergenosData\";\nimport Alergeno from \"./Alergeno\";\n\nconst Alergenos = () => {\n  const { allergyList, setAllergyList, foundPlace, lang } = useContext(DataContext);\n\n  const arrayOfMenu = [];\n  foundPlace.categorias.map((x) => arrayOfMenu.push(x.data));\n  const flattened = arrayOfMenu.flat();\n\n  const listHandler = (isChecked, number) => {\n    const iterablesAlerg = flattened.filter((x) => x.alergenos !== undefined);\n    const elements = iterablesAlerg.filter(\n      (el) => el.alergenos.indexOf(+number) === -1\n    );\n    let newL = [...allergyList];\n    if (isChecked) {\n      if (newL.length <= 0) {\n        newL.push(elements);\n      } else {\n        // returning a list of all the elements in the menu that do not contain that particular allergen\n        newL = [...allergyList].filter(\n          (x) => x.alergenos.indexOf(number) === -1\n        );\n      }\n      setAllergyList([...new Set(newL.flat())]);\n    } else {\n      const elemsToPush = iterablesAlerg.filter(\n        (el) => el.alergenos.indexOf(number) !== -1\n      );\n      newL.push(elemsToPush);\n      setAllergyList([...new Set(newL.flat())]);\n    }\n  };\n\n  return (\n    <div className=\"multiselect\">\n      {AlergenosData.map((alergeno) => (\n        <Alergeno \n          lang={lang}\n          key={alergeno.number}\n          listHandler={listHandler}\n          {...alergeno}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Alergenos;\n","import React, { useState, useContext  } from \"react\";\nimport Alergenos from \"./Alergenos\";\nimport { DataContext } from './../Context/Context'\n\n\nconst AlergenosPopUp = (props) => {\n  const [modalPopUpClass, setmodalPopUpClass] = useState(\"parentPopUp\")\n  const { foundPlace, lang } = useContext(DataContext)\n \n  const titlePopUp = () => {\n    switch (lang) {\n      case \"ca\":\n        return \"¿Tens alguna al·lèrgia?\";\n      case \"en\":\n        return \"Do you have any allergies?\";\n      case \"es\":\n        return \"¿Tienes alguna alergia?\";\n      default: return \"¿Tens alguna al·lèrgia?\";\n     \n    }\n  };\n\n  const subtitlePopUp = () => {\n    switch (lang) {\n      case \"ca\":\n        return \"Digueu-nos-ho, només us mostrem els plats adequats per a vosaltres\";\n      case \"en\":\n        return \"Let us know, so we only show you what is adequate for you\";\n      case \"es\":\n        return \"Indicanos asi solo te mostramos platos aptos para ti\";\n      default: return \"Indicanos asi solo te mostramos platos aptos para ti\";\n     \n    }\n  };\n\n\n  const togglePopUp = () => {\n    setTimeout(() => {\n      props.showAllergenPopUp();\n      setmodalPopUpClass(\"parentPopUp fadeIn\")\n    }, 300);\n    setmodalPopUpClass(\"parentPopUp fadeOutPopUp\")\n  }\n\n  return (\n    <>\n    {props.isOpenPopUp ? (\n        <div className=\"overlayModal\" style={{backgroundColor: foundPlace.overlayColor}}>\n          <div className={modalPopUpClass} style={{backgroundColor: foundPlace.modalBackgroundColor}} >\n            <div className=\"myPopUp\" style={{color: foundPlace.backgroundColor}}>\n            <div className=\"titleContainerPopUp\">\n                <h3>{titlePopUp()}</h3>\n                <p>{subtitlePopUp()}</p>            \n            </div>\n\n                <Alergenos />\n                <div className=\"buttonDivUpselling\" style={{ border: foundPlace.borderButton, color: foundPlace.color}}>\n                  <button\n                    className=\"buttonUpselling buttonClose\"\n                    style={{ color: foundPlace.backgroundColor}}\n                    onClick={togglePopUp}\n                  >\n                    Continuar\n                  </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        ) : null}\n    </>\n  );\n};\n\nexport default AlergenosPopUp;\n","import React, { useState, useContext } from \"react\";\nimport Foodbox from \"./Foodbox\";\nimport Searchbar from \"./Searchbar\";\nimport { DataContext } from \"./../Context/Context\";\nimport AlergenosPopUp from \"./../Components/AlergenosPopUp\";\nimport vegetarianos from './../Assets/ic vegetarianos.svg';\nimport veganos from './../Assets/ics veganos.svg';\nimport celiacos from './../Assets/Tacc.svg';\n\nconst SearchComponent = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const { lang, allergyList, flattened} = useContext(DataContext);\n  const [filterFoods, setFilterFoods] = useState(flattened);\n\n  const [isOpenPopUp, setIsOpenPopUp] = useState();\n  const [displayAllergList, setdisplayAllergList] = useState(false);\n\n  const showAllergenPopUp = () => {\n    setIsOpenPopUp(!isOpenPopUp);\n    setdisplayAllergList(true);\n  };\n  const filterOnChange = (e) => {\n    setInputValue(e.target.value);\n\n    let searchValue = e.target.value.toLowerCase();\n    let filteredFoods = flattened.filter(\n      (food) =>\n        food.nombre.toLowerCase().includes(searchValue) ||\n        food.descripcion.toLowerCase().includes(searchValue) \n       \n    );\n\n    setFilterFoods(filteredFoods);\n  };\n\n  const filterByTag = (tag) => {\n    setdisplayAllergList(false);\n    let filteredFoods = flattened.filter((food) =>\n      food.tags.toLowerCase().includes(tag)\n    );\n\n    setFilterFoods(filteredFoods);\n  };\n\n  const switchLang = (parameter) => {\n    const translations = {\n      vegetarian: [\"VEGETARIANO\", \"Vegetarian\", \"Vegetariano\"],\n      vegan: [\"VEGANO\", \"Vegan\", \"Vegano\"],\n      celiacs:[\"CELIACO\", \"Allergens\", \"Alérgenos\"]\n    }\n    switch (lang) {\n      case \"ca\":\n        return translations[parameter][0];\n      case \"en\":\n        return translations[parameter][1];\n      case \"es\":\n        return translations[parameter][2];\n      default:\n        return translations[parameter][0]\n    }\n  };\n\n  return (\n    <div className=\"centered fadeIn\">\n      <Searchbar\n        filterOnChange={filterOnChange}\n        inputValue={inputValue}\n        lang={lang}\n      />\n      <div className=\"iconos-filter\">\n        <div className=\"iconos-filter-text\" onClick={() => filterByTag(\"vega\")}>\n          <img src={veganos} className=\"icono-svg\" alt=\"\"/>\n          {switchLang(\"vegan\")}\n        </div>\n        <div\n          className=\"iconos-filter-text\"\n          onClick={() => filterByTag(\"vegetaria\")}\n        >\n           <img src={vegetarianos} className=\"icono-svg\" alt=\"\"/>\n          {switchLang(\"vegetarian\")}\n        </div>\n        <AlergenosPopUp\n          isOpenPopUp={isOpenPopUp}\n          showAllergenPopUp={showAllergenPopUp}\n        />\n        <div className=\"iconos-filter-text\" >\n        <img src={celiacos} className=\"icono-svg\" alt=\"\"/>\n\n\n          {switchLang(\"celiacs\")}\n\n        </div>\n      </div>\n      <div className=\"list-add\">\n        <ul className=\"list-food\">\n          {displayAllergList\n            ? allergyList.map((e, i) => <Foodbox {...e} lang={lang} key={i} />)\n            : filterFoods.map((e, i) => <Foodbox {...e} lang={lang} key={i} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchComponent;\n","import React, { useState, useContext } from \"react\";\nimport { DataContext } from './../Context/Context'\n\nconst Upselling = ({ isOpen, showModal }) => {\n  const { foundPlace, lang } = useContext(DataContext)\n  const [modalClass, setmodalClass] = useState(\"parentModal\")\n  \n  const toggleAnimation = () => {\n    setTimeout(() => {\n      showModal()\n      setmodalClass(\"parentModal fadeIn\")\n    }, 300);\n    setmodalClass(\"parentModal fadeOut\")\n  }\n\n\n  const switchLang = (parameter) => {\n    let parameterEs = `${parameter}_es`;\n    let parameterEn = `${parameter}_en`;\n    switch (lang) {\n      case \"ca\":\n        return foundPlace[parameter];\n      case \"en\":\n        return foundPlace[parameterEn];\n      case \"es\":\n        return foundPlace[parameterEs];\n      default:\n        return foundPlace[parameter]\n    }\n  };\n\n\n  return (\n    <>\n      {isOpen ? (\n        <div className=\"overlayModal\"  style={{backgroundColor: foundPlace.overlayColor}}>\n          <div className={modalClass} style={{backgroundColor: foundPlace.modalBackgroundColor}}>\n            <div className=\"mymodal\" style={{color: foundPlace.backgroundColor}}>\n              <h1>{switchLang('sugerenciaDelDiaTitulo')}</h1>\n              <hr className=\"modalDivider\" />\n              <div>\n                <img src={foundPlace.sugerenciaDelDiaImg} className=\"guineu\" alt=\"\" />\n              </div>\n              <p>\n              {switchLang('sugerenciaDelDiaDescripcion')}\n              </p>\n              <hr className=\"modalDivider\" />\n              <div>\n                <div className=\"buttonDivUpselling\" style={{ border: foundPlace.borderButton, color: foundPlace.color}}>\n                  <button\n                    className=\"buttonUpselling buttonClose\"\n                    style={{ color: foundPlace.backgroundColor}}\n                    onClick={toggleAnimation}\n                  >\n                    {switchLang('sugerenciaDelDiaBoton')}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Upselling;\n","import React, { useState } from \"react\";\nimport DivisionList from \"../Components/DivisionList\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Foodlist from \"../Components/Foodlist\";\nimport DividedFoodlist from \"../Components/DividedFoodList\";\nimport { DataContext } from \"./../Context/Context\";\nimport SearchComponent from \"../Components/SearchComponent\";\nimport foods from \"../foods.json\";\nimport Helmet from \"react-helmet\";\nimport \"./../App.css\";\nimport Upselling from \"../Components/Upselling\";\nimport home from './../Assets/home.svg'\n\n\nconst param = window.location.pathname.slice(1);\nconst foundPlace =foods.places.find((x) => x.place === param) || foods.places[1];\nconst option1 = foundPlace.place || \"\";\nconst arrayOfMenu = [];\nfoundPlace.categorias.map((x) => arrayOfMenu.push(x.data));\nlet flattened = arrayOfMenu.flat();\n\nfunction Places() {\n  const [buscar, setBuscar] = useState(false);\n  const [lang, setLang] = useState(\"ca\");\n  const [isOpen, setIsOpen] = useState(false);\n  const [allergyList, setAllergyList] = useState([]);\n  const [showBack, setShowBack] = useState(false);\n\n  const showModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const categoryAndSearchSwitcher = () => {\n    setBuscar(false);\n    setShowBack(false);\n  };\n\n  const switchLang = (parameter) => {\n   const nombreEs = `${parameter}_es`\n   const nombreEn = `${parameter}_en`\n    switch (lang) {\n      case \"ca\":\n        return foundPlace[parameter];\n      case \"en\":\n        return foundPlace[nombreEn];\n      case \"es\":\n        return foundPlace[nombreEs];\n      default:\n        return foundPlace[parameter];\n    }\n  };\nconst hasUpselling = () => {\n  if(foundPlace.hasUpselling)\n  return <div className=\"buttonDivUpselling\">\n  <button\n    style={{\n      border: foundPlace.borderButton,\n      color: foundPlace.color,\n    }}\n    className=\"buttonUpselling buttonSugerencia\"\n    onClick={showModal}\n  >\n    {switchLang(\"sugerenciaButton\")}\n  </button>\n</div>\n else{\n   return null\n }\n}\n\n  return (\n    <div className=\"App version-movil\">\n      <div className=\"contenedor-movil\">\n        <div className=\"App-desktop-container\">\n          <Router>\n            <DataContext.Provider\n              value={{\n                lang,\n                buscar,\n                allergyList,\n                setAllergyList,\n                param,\n                foundPlace,\n                flattened,\n                isOpen\n              }}\n            >\n              <Upselling isOpen={isOpen} showModal={showModal} />\n\n              <Helmet>\n                <style>{`body { background-color: ${foundPlace.backgroundColor}; min-height:100vh; font-family: ${foundPlace.font}; color: ${foundPlace.color}}`}</style>\n              </Helmet>\n              <div style={{minHeight:'40px'}}>\n                {showBack ? (\n                  <div onClick={categoryAndSearchSwitcher}>\n                    {\" \"}\n                    <Link to={`/${option1}`}>\n                      <img className=\"homeIcon\" style={{filter: foundPlace.homeInverted? 'invert(1)':''}} src={home} alt=\"\"/>\n                    </Link>\n                  </div>\n                ) : hasUpselling()}</div>\n              {\n                foundPlace.hasLang\n                ? <div className=\"languages\">\n                <div\n                  className={lang === \"ca\" ? \"perLanguage-act\" : \"perLanguage\"}\n                  onClick={() => setLang(\"ca\")}\n                >\n                  CA\n                </div>\n                <div\n                  className={lang === \"en\" ? \"perLanguage-act\" : \"perLanguage\"}\n                  onClick={() => setLang(\"en\")}\n                >\n                  EN\n                </div>\n                <div\n                  className={lang === \"es\" ? \"perLanguage-act\" : \"perLanguage\"}\n                  onClick={() => setLang(\"es\")}\n                >\n                  ES\n                </div>\n              </div>\n              : null\n              }\n              \n                <img src={foundPlace.iso} alt=\"logo\" className=\"isoTipo\" />\n              <div className=\"homeAndSearch\">\n                <div className=\"search-bar\" onClick={() => setBuscar(!buscar)}>\n                  {buscar ? (\n                    <div className=\"buscador\">\n                     \n                      <p>{lang === \"en\" ? \"< BACK\" : \" < VOLVER\"}</p>\n                    </div>\n                  ) : (\n                    <div className=\"buscador\">\n                      {/* <AiOutlineSearch /> */}\n                      <p>{lang === \"en\" ? \"SEARCH\" : \"BUSCAR\"}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {buscar ? (\n                <SearchComponent lang={lang} />\n              ) : (\n                <div\n                  onClick={() => {\n                    setShowBack(true);\n                  }}\n                >\n                  <Route\n                    exact\n                    path=\"/:place\"\n                    render={(props) => <DivisionList {...props} lang={lang} />}\n                  />\n                \n                  <Route\n                    exact\n                    path=\"/:place/category/:categoryName\"\n                    render={(props) => <Foodlist {...props} lang={lang} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/:place/division/:divisionName\"\n                    render={(props) => <DividedFoodlist {...props} lang={lang} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/:place/division/:divisionName/category/:categoryName\"\n                    render={(props) => <Foodlist {...props} lang={lang} />}\n                  />\n                </div>\n              )}\n             \n            </DataContext.Provider>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Places;\n"],"sourceRoot":""}